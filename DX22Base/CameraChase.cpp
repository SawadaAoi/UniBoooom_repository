/* ========================================
	HEW/UniBoooom!!
	------------------------------------
	追跡カメラ実装
	------------------------------------
	CameraChase.cpp
	------------------------------------
	作成者	takagi

	変更履歴
	・2023/11/04 制作 takagi
	・2023/11/06 コーディング規約適用・追跡対象登録機構作成 takagi
	・2023/11/07 GetViewMatrix()関数にconst修飾子付与・コメント修正 takagi
	・2023/11/08 TPos修正 takagi
	・2023/11/09 微調整 takagi
	・2023/11/10 パラメタ修正 takagi
	・2023/11/18 振動フラグ処理 takagi
	・2023/11/29 大文字・小文字の修正 takagi
	・2023/12/03 位置ゲッタ用調整 takagi

========================================== */

// =============== インクルード ===================
#include "CameraChase.h"	//自身のヘッダ
#include "Input.h"			//入力受付

/* ========================================
	コンストラクタ関数
	-------------------------------------
	内容：生成時に行う処理
	-------------------------------------
	引数1：なし
	-------------------------------------
	戻値：なし
=========================================== */
CCameraChase::CCameraChase(const TPos3d<float>* pPos)
	:m_pTarget(pPos)	//追跡対象(追跡のみを行い値を変更できないようconst修飾子にしている)
{
	// =============== 初期化 ===================
	UpdatePos();	//初期対象位置を自身位置に反映
}

/* ========================================
	デストラクタ関数
	-------------------------------------
	内容：破棄時に行う処理
	-------------------------------------
	引数1：なし
	-------------------------------------
	戻値：なし
=========================================== */
CCameraChase::~CCameraChase()
{
}

/* ========================================
	更新関数
	-------------------------------------
	内容：更新処理　※このオブジェクトより先に追跡対象の更新必要あり
	-------------------------------------
	引数1：なし
	-------------------------------------
	戻値：なし
=========================================== */
void CCameraChase::Update()
{
	// =============== 情報更新 ===================
	UpdatePos();	//位置更新

	// =============== フラグ処理 ===================
	HandleFlag();	//フラグ内容処理
}

/* ========================================
	転置無しプロジェクション行列取得関数
	-------------------------------------
	内容：転置していないプロジェクション行列(2D固定)を提供
	-------------------------------------
	引数1：なし
	-------------------------------------
	戻値：作成した行列
=========================================== */
DirectX::XMFLOAT4X4 CCameraChase::GetViewWithoutTranspose() const
{
	DirectX::XMFLOAT4X4 view;
	DirectX::XMStoreFloat4x4(&view, DirectX::XMMatrixLookAtLH(
		DirectX::XMVectorSet(m_fPos.x, m_fPos.y, m_fPos.z, 0.0f),					//カメラ位置
		DirectX::XMVectorSet(m_pTarget->x + m_fOffsetVibrateLook.x, m_pTarget->y,
			m_pTarget->z + m_fOffsetVibrateLook.y, 0.0f),							//注視点
		DirectX::XMVectorSet(m_fUp.x, m_fUp.y, m_fUp.z, 0.0f)));						//アップベクトル
	// =============== 提供 ===================
	return view;
}

/* ========================================
	位置更新関数
	-------------------------------------
	内容：位置更新処理　※初期時、Turget位置反映用
	-------------------------------------
	引数1：なし
	-------------------------------------
	戻値：なし
=========================================== */
void CCameraChase::UpdatePos()
{
	// =============== 位置更新 ===================
	m_fPos.x = m_pTarget->x + m_fOffsetVibrateEye.x;								//カメラx位置
	m_fPos.y = m_pTarget->y + m_fRadius * sinf(m_fAngle);							//カメラy位置
	m_fPos.z = m_pTarget->z + m_fOffsetVibrateEye.y - m_fRadius * cosf(m_fAngle);	//カメラz位置
}