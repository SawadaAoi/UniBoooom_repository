/* ========================================
	HEW/UniBoooom!!
	---------------------------------------
	タイトル用2Dオブジェ実装
	---------------------------------------
	TitleObj.cpp

	作成者	takagi

	変更履歴
	・2023/12/16 制作 takagi
	・2023/12/17 引数参照化 takagi

========================================== */

// =============== インクルード ===================
#include "TitleObj.h"	//自身のヘッダ
#include "Defines.h"	//画面情報用

/* ========================================
	コンストラクタ
	----------------------------------------
	内容：生成時に行う処理
	----------------------------------------
	引数1：const int& nWaitTime：待機時間
	----------------------------------------
	戻値：なし
=========================================== */
CTitleObj::CTitleObj(const int& nWaitTime)
	:m_pnWaitTime(nullptr)				//待機時間
{
	// =============== 動的確保 ===================
	if (nWaitTime > 0)	//待機時間がある
	{
		m_pnWaitTime = new int(nWaitTime);	//待機時間初期化
	}
}

/* ========================================
	デストラクタ
	----------------------------------------
	内容：破棄時に行う処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
CTitleObj::~CTitleObj()
{
	// =============== 終了 ===================
	SAFE_DELETE(m_pnWaitTime);	//待機時間削除
}

/* ========================================
	更新関数
	----------------------------------------
	内容：更新処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
void CTitleObj::Update()
{
	// =============== 検査 ===================
	if (m_pnWaitTime)	//ヌルチェック
	{
		// =============== タイマ ===================
		if (*m_pnWaitTime > 0)
		{
			(*m_pnWaitTime)--;	//カウントダウン

			// =============== 終了 ===================
			return;	//処理中断
		}
		else
		{
			SAFE_DELETE(m_pnWaitTime);	//タイマ削除
		}
	}
}

/* ========================================
	描画関数
	----------------------------------------
	内容：描画処理
	----------------------------------------
	引数1：const E_DRAW_MODE & eMode：描画モード
	----------------------------------------
	戻値：なし
=========================================== */
void CTitleObj::Draw(const E_DRAW_MODE & eMode)
{
	// =============== 検査 ===================
	if (!ChackDraw())	//描画するか
	{
		// =============== 終了 ===================
		return;	//処理中断
	}

	// =============== 描画 ===================
	C2dPolygon::Draw(eMode);	//委譲
}

/* ========================================
	描画確認関数
	----------------------------------------
	内容：描画の可否検査をする
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：描画するかどうか
=========================================== */
bool CTitleObj::ChackDraw()
{
	// =============== 検査 ===================
	if (m_pnWaitTime)	//ヌルチェック
	{
		// =============== 終了 ===================
		return false;	//処理中断
	}

	// =============== 提供 ===================
	return true;	//すべての条件を通過
}