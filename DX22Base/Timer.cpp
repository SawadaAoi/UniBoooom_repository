/* ========================================
	HEW/UniBoooom!!
	------------------------------------
	ゲームタイマー
	------------------------------------
	Timer.cpp
	------------------------------------
	作成者
		鄭宇恩
	変更履歴
	・2023/11/14 cpp,作成 Tei

========================================== */

// =============== インクルード ===================
#include "Timer.h"

// =============== 定数定義 =======================
const int STAGE_TIME = 180 * 60;	//ステージ制限時間（秒*フレーム）

/* ========================================
	コンストラクタ
	----------------------------------------
	内容：生成時に行う処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
CTimer::CTimer()
	: m_nTimeCnt(STAGE_TIME)
	, m_bProgreFlg(false)
{

}

/* ========================================
	コンストラクタ
	----------------------------------------
	内容：破棄時に行う処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
CTimer::~CTimer()
{
}

/* ========================================
	タイマー更新関数
	----------------------------------------
	内容：タイマーのカウントダウン処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
void CTimer::Update()
{
	//タイムカウント開始
	if (m_bProgreFlg)
	{
		m_nTimeCnt--;
	}

	//時間が0になったら終了処理に
	if (m_nTimeCnt == 0)
	{
		// TODOゲーム終了処理
	}
}

/* ========================================
	描画関数
	----------------------------------------
	内容：タイマーの描画処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
void CTimer::Draw()
{
	//TODO時間UIの描画
}

/* ========================================
	タイマー取得関数
	----------------------------------------
	内容：タイマーの分計算
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：時間の分
=========================================== */
int CTimer::GetMinite()
{
	m_nTimeCnt = m_nTimeCnt / 3600;			//分 = 総タイム割る（60秒 * 60フレーム）

	return m_nTimeCnt;
}
/* ========================================
	タイマー取得関数
	----------------------------------------
	内容：タイマーの秒数計算
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：時間の秒
=========================================== */

int CTimer::GetSecond()
{
	m_nTimeCnt = ( m_nTimeCnt / 60 ) % 60;	//秒 = 分の部分を抜くの残り

	return m_nTimeCnt;
}

/* ========================================
	タイムスタート待つ関数
	----------------------------------------
	内容：タイマーを動く前の待つ時間設定
	----------------------------------------
	引数1：待つ時間（秒）
	----------------------------------------
	戻値：なし
=========================================== */
void CTimer::TimeStart(int StartCnt)
{
	//タイマーカウント開始前の待つ時間
	StartCnt = StartCnt * 60;
	StartCnt--;
	//0になったらタイムカウント開始
	if (StartCnt == 0)
	{
		m_bProgreFlg = true;
	}
}
