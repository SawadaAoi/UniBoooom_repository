/* ========================================
	HEW/UniBoooom!!
	---------------------------------------
	タイトルシーン実装
	---------------------------------------
	Title.cpp

	作成者
			takagi
			nieda

	変更履歴
	・2023/10/26 仮制作 takagi
	・2023/11/05 現段階のコーディング規約適用 takagi
	・2023/11/07 コメント修正 takagi
	・2023/11/16 オーバーライド関数追加 takagi
	!memo(見たら消してー)：コピペしやすいように形だけ作っただけなので実装しなくていいです(プロトタイプの間は使うことはありません。)

========================================== */

// =============== インクルード ===================
#include "Title.h"	//自身のヘッダ
#include "DirectXTex/TextureLoad.h"
#include "Pos3d.h"
#include "Sprite.h"
#include "GameParameter.h"
#include "Input.h"


/* ========================================
	コンストラクタ
	----------------------------------------
	内容：生成時に行う処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
CTitle::CTitle()
{
	m_pTexture = new Texture();
	if (FAILED(m_pTexture->Create("Assets/Texture/gamestart.png")))
	{
		MessageBox(NULL, "Title gamstart.png", "Error", MB_OK);
	}
}

/* ========================================
	デストラクタ
	----------------------------------------
	内容：破棄時に行う処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
CTitle::~CTitle()
{
}

/* ========================================
	更新関数
	----------------------------------------
	内容：更新処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
void CTitle::Update()
{
	if (IsKeyTrigger(VK_SPACE))
	{
		m_bFinish = true;
	}
}

/* ========================================
	描画関数
	----------------------------------------
	内容：描画処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
	======================================== */
//!memo(見たら消してー)：constが邪魔になったら外してね(.hの方も)
void CTitle::Draw()
{
	Draw2d(600.0f, 100.0f, 300.0f, 50.0f, m_pTexture);
}

/* ========================================
	種類ゲッタ
	----------------------------------------
	内容：自身がタイトルシーンであることを示す
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：自身の種類
=========================================== */
CTitle::E_TYPE CTitle::GetType() const
{
	// =============== 提供 ===================
	return CTitle::E_TYPE_TITLE;	//自身の種類
}

/* ========================================
	次シーンゲッタ
	----------------------------------------
	内容：遷移したいシーンが何かを示す
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：遷移先シーンの種類
=========================================== */
CTitle::E_TYPE CTitle::GetNext() const
{
	// =============== 提供 ===================
	return CTitle::E_TYPE_STAGE1;	//遷移先シーンの種類
}
