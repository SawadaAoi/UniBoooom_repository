/* ========================================
	HEW/UniBoooom!!
	------------------------------------
	ポーズ用ピクセルシェーダー
	------------------------------------
	PsPause.hlsl
	------------------------------------
	作成者	takagi

	変更履歴
	・2023/11/18 制作 takagi
	・2023/11/19 18の続き takagi
	・2023/11/20 整理 takagi
	・2023/12/01 2dPolygonに適する形に変更 takagi
	・2023/12/06 pose→pause修正、ポーズ文字表示 takagi
	・2024/01/11 ブレンドステート修正に伴う透明度調整 takagi

========================================== */

// =============== 構造体定義 =====================
struct PS_IN
{
	float4 fPos : SV_POSITION;	//位置情報
	float2 fUv : TEXCOORD0;		//テクスチャ情報
	float4 fColor : COLOR0;		//色情報
};	//受け取る情報

// =============== バッファ =====================
Texture2D Tex : register(t0);		//テクスチャ
SamplerState Samp : register(s2);	//フェード用サンプラーステート

/* ========================================
	メイン関数
	-------------------------------------
	内容：ピクセル毎に描く色の情報を設定する
	-------------------------------------
	引数1：PS_IN PsIn：頂点シェーダーから受け取る情報
	-------------------------------------
	戻値：そのピクセルに表示する色情報(rgba)
=========================================== */
float4 main(PS_IN PsIn) : SV_TARGET
{
	// =============== 更新 =====================
	float2 fUv = (PsIn.fUv - 0.5f) * 2.0f;												//UV座標更新
	float2 fCentPos = float2(0.0f, 0.0f);												//中心位置
	float4 fColor = Tex.Sample(Samp, PsIn.fUv);											//テクスチャ貼り付け
	float fMinAlpha = 0.4f;															//透明度最小値
	float fMaxAlpha = 1.0f;																//透明度最大値
	float fReviseAlpha = -0.24f;														//透明度補正値
	fColor.w = min(max(distance(fUv, fCentPos) + fReviseAlpha, fMinAlpha), fMaxAlpha);	//透明度変更：グラデーションのかかった、ぼやけた四隅

	// =============== 提供 =====================
	return fColor;	//確定した色
}