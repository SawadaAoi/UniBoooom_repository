/* ========================================
	HEW/UniBoooom!!
	------------------------------------
	用cpp
	------------------------------------
	Object.cpp
	------------------------------------
	作成者
		山本凱翔
	変更履歴
	・2023/11/14 作成　Yamamoto

	

========================================== */

// =============== インクルード ===================
#include "Object.h"

/* ========================================
   コンストラクタ関数
   ----------------------------------------
   内容：生成時に行う処理
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：なし
   ======================================== */
CObject::CObject()
	: m_Transform({ 0.0f }, { 0.0f }, { 0.0f })
	, m_Sphere({ 0.0f }, { 0.0f,0.0f,0.0f })
{
}
/* ========================================
   デストラクタ関数
   ----------------------------------------
   内容：破棄時に行う処理
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：なし
   ======================================== */
CObject::~CObject()
{
}
/* ========================================
   ワールド座標取得の関数
   ----------------------------------------
   内容：ワールド座標を取得する関数
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：m_Transform
======================================== */
tagTransform3d CObject::GetTransform()//ワールド座標系をとるためのゲッター
{
	return m_Transform;
}
/* ========================================
   座標取得の関数
   ----------------------------------------
   内容：座標を取得する関数
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：座標(x,y,z)
======================================== */
TPos3d<float> CObject::GetPos()//ワールド座標系の位置をとるためのゲッター
{
	return m_Transform.fPos;
}
/* ========================================
   ワールド座標の回転角取得の関数
   ----------------------------------------
   内容：ワールド座標の回転角を取得する関数
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：m_Transform.fRadian
======================================== */
TTriType<float> CObject::GetRadian()//ワールド座標系の回転角をとるためのゲッター
{
	return m_Transform.fRadian;
}
/* ========================================
   ワールド座標の拡縮率取得の関数
   ----------------------------------------
   内容：ワールド座標の回転角を取得する関数
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：m_Transform.fRadian
======================================== */
TTriType<float> CObject::GetScale()//ワールド座標系の拡縮率をとるためのゲッター
{
	return m_Transform.fScale;
}
/* ========================================
   当たり判定取得関数
   ----------------------------------------
   内容：当たり判定用の球体を取得する関数
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：当たり判定(Sphere)
======================================== */
tagSphereInfo CObject::GetSphere()
{
	return m_Sphere;
}
/* ========================================
   当たり判定の円の半径取得関数
   ----------------------------------------
   内容：当たり判定用の球体の円の半径を取得する関数
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：当たり判定の円の半径(fRadius)
======================================== */
float CObject::GetRadius()
{
	return m_Sphere.fRadius;
}
/* ========================================
   当たり判定位置のずれ取得関数
   ----------------------------------------
   内容：当たり判定位置のずれを取得する関数
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：当たり判定位置のずれ(fShift)
======================================== */
TPos3d<float> CObject::GetShift()
{
	return m_Sphere.fShift;
}
/* ========================================
	ワールド座標系セット関数
	-------------------------------------
	内容：ワールド座標系をセットする(追跡処理に使用する)
	-------------------------------------
	引数1：ワールド座標系(Transform)
	-------------------------------------
	戻値：なし
=========================================== */
void CObject::SetTransform(tagTransform3d Transform)
{
	m_Transform = Transform;
}
/* ========================================
	ワールド座標系位置セット関数
	-------------------------------------
	内容：ワールド座標系をセットする(追跡処理に使用する)
	-------------------------------------
	引数1：
	-------------------------------------
	戻値：なし
=========================================== */
void CObject::SetPos(TPos3d<float> Pos)
{
	m_Transform.fPos = Pos;
}
/* ========================================
	ワールド座標系回転角セット関数
	-------------------------------------
	内容：ワールド座標系回転角をセットする(追跡処理に使用する)
	-------------------------------------
	引数1：
	-------------------------------------
	戻値：なし
=========================================== */
void CObject::SetRadian(TTriType<float> Radian)
{
	m_Transform.fRadian = Radian;
}
/* ========================================
	ワールド座標系拡縮率セット関数
	-------------------------------------
	内容：ワールド座標系回転角をセットする(追跡処理に使用する)
	-------------------------------------
	引数1：
	-------------------------------------
	戻値：なし
=========================================== */
void CObject::SetScale(TTriType<float> Scale)
{
	m_Transform.fScale = Scale;
}
/* ========================================
	当たり判定セット関数
	-------------------------------------
	内容：当たり判定をセットする(追跡処理に使用する)
	-------------------------------------
	引数1：当たり判定(Sphere)
	-------------------------------------
	戻値：なし
=========================================== */
void CObject::SetSphere(tagSphereInfo Sphere)
{
	m_Sphere = Sphere;
}
/* ========================================
	当たり判定半径セット関数
	-------------------------------------
	内容：当たり判定の球の半径をセットする(追跡処理に使用する)
	-------------------------------------
	引数1：球の半径
	-------------------------------------
	戻値：なし
=========================================== */
void CObject::SetRadius(float Radius)
{
	m_Sphere.fRadius = Radius;
}
/* ========================================
	当たり判定位置ずれセット関数
	-------------------------------------
	内容：当たり判定の位置ずれをセットする(追跡処理に使用する)
	-------------------------------------
	引数1：球の半径
	-------------------------------------
	戻値：なし
=========================================== */
void CObject::SetShift(TPos3d<float> Shift)
{
	m_Sphere.fShift = Shift;
}
