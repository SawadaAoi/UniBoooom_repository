/* ========================================
	HEW/UniBoooom!!
	---------------------------------------
	タイトル用アニメーション実装
	---------------------------------------
	TitleAnime.cpp

	作成者	takagi

	変更履歴
	・2023/12/16 制作 takagi
	・2023/12/17 引数参照化 takagi

========================================== */

// =============== インクルード ===================
#include "TitleAnime.h"	//自身のヘッダ
#include "Defines.h"	//画面情報用

// =============== 定数定義 ===================
const TPos3d<float> SCALE(3094.0f * 0.2f, 2039.0f * 0.2f, 0.0f);	//大きさ
const int MAX_ANIM(1);												//アニメーション数
const TDiType<int> MAX_SEAT(1);										//1x1

/* ========================================
	コンストラクタ
	----------------------------------------
	内容：生成時に行う処理
	----------------------------------------
	引数1：const int& nSplitMax：スプレッドシート分割数
	引数2：const TDiType<int>& nSplit：シートの縦横各分割数
	引数3：const int& nWaitTime：待機時間
	引数4：const int nCnt&：フレーム間隔
	----------------------------------------
	戻値：なし
=========================================== */
CTitleAnime::CTitleAnime(const int& nSplitMax, const TDiType<int>& nSplit, const int& nWaitTime, const int& nCnt)
	:m_pnWaitTime(nullptr)				//待機時間
	,CDrawAnim(nSplitMax, nSplit, nCnt)	//委譲
{
	// =============== 動的確保 ===================
	if (nWaitTime > 0)	//待機時間がある
	{
		m_pnWaitTime = new int(nWaitTime);	//待機時間初期化
	}
}

/* ========================================
	デストラクタ
	----------------------------------------
	内容：破棄時に行う処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
CTitleAnime::~CTitleAnime()
{
	// =============== 終了 ===================
	SAFE_DELETE(m_pnWaitTime);	//待機時間削除
}

/* ========================================
	更新関数
	----------------------------------------
	内容：更新処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
void CTitleAnime::Update()
{
	// =============== 検査 ===================
	if (m_pnWaitTime)	//ヌルチェック
	{
		// =============== タイマ ===================
		if (*m_pnWaitTime > 0)
		{
			(*m_pnWaitTime)--;	//カウントダウン

			// =============== 終了 ===================
			return;	//処理中断
		}
		else
		{
			SAFE_DELETE(m_pnWaitTime);	//タイマ削除
		}
	}
	
	CDrawAnim::Update();
}

/* ========================================
	描画関数
	----------------------------------------
	内容：描画処理
	----------------------------------------
	引数1：const E_DRAW_MODE & eMode eMode：描画モード
	----------------------------------------
	戻値：なし
=========================================== */
void CTitleAnime::Draw(const E_DRAW_MODE & eMode)
{
	// =============== 検査 ===================
	if (m_pnWaitTime)	//ヌルチェック
	{
		// =============== 終了 ===================
		return;	//処理中断
	}

	// =============== 描画 ===================
	CDrawAnim::Draw(E_DRAW_MODE_BILLBOARD);	//委譲
}