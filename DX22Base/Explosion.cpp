/*========================================
	HEW/UniBoooom!!
	---------------------------------------
	爆発用cpp
	---------------------------------------
	Explosion.cpp
	
	TeiUon
	
	変更履歴
	・2023/11/03 cpp作成 / 鄭 宇恩
	・2023/11/05 爆発cppの初期設定　/ 鄭 宇恩
	・2023/11/06 爆発のモデル設定、描画、位置
	・2023/11/06 boolの設定と取得関数制作 / 鄭 宇恩
	・2023/11/08 変数、関数の変更 / 澤田蒼生	
	
======================================== */


//=============== インクルード ===================
#include "Explosion.h"
#include "Geometry.h"

// =============== 定数定義 =======================
const float MAX_DISPLAY_TIME = 5.0f;


/* ========================================
	コンストラクタ関数
	-------------------------------------
	内容：コンストラクタ
	-------------------------------------
	引数1：無し
	-------------------------------------
	戻値：無し
=========================================== */
CExplosion::CExplosion()
	: m_fSize(1.0f)
	, m_fDelFrame(0.0f)
	, m_bDelFlg(false)
{

	//爆発オブジェクト初期化
	m_Sphere.pos = { 0.0f, 0.0f, 0.0f };
	m_Sphere.radius = 1.0f;
}

/* ========================================
	デストラクタ関数
	-------------------------------------
	内容：デストラクタ
	-------------------------------------
	引数1：無し
	-------------------------------------
	戻値：無し
=========================================== */
CExplosion::~CExplosion()
{

	
}


/* ========================================
	更新関数
	-------------------------------------
	内容：爆発内の更新処理
	-------------------------------------
	引数1：無し
	-------------------------------------
	戻値：無し
=========================================== */
void CExplosion::Update()
{
	DisplayTimeAdd();
}



/* ========================================
	描画関数
	-------------------------------------
	内容：爆発の描画処理
	-------------------------------------
	引数1：
	-------------------------------------
	戻値：
=========================================== */
void CExplosion::Draw()
{


	
}


/* ========================================
	爆発表示カウント加算処理関数
	-------------------------------------
	内容：爆発表示カウントを加算して一定秒数超えたら終了フラグをオンにする
	-------------------------------------
	引数1：無し
	-------------------------------------
	戻値：無し
=========================================== */
void CExplosion::DisplayTimeAdd()
{
	m_fDelFrame++;
	if (MAX_DISPLAY_TIME >= m_fDelFrame)
	{
		m_bDelFlg = true;
	}
}

void CExplosion::SetPos(TTriType<float> pos)
{
	m_Sphere.pos = pos;
}


/* ========================================
	Sphere情報設定処理関数
	-------------------------------------
	内容：Sphereに値をセットする
	-------------------------------------
	引数1：Sphere情報
	-------------------------------------
	戻値：無し
=========================================== */
void CExplosion::SetSphere(CSphereInfo::Sphere sphere)
{
	m_Sphere = sphere;
}


/* ========================================
	Sphere情報取得処理関数
	-------------------------------------
	内容：Sphere情報を取得する
	-------------------------------------
	引数1：無し
	-------------------------------------
	戻値：Sphere情報
=========================================== */
CSphereInfo::Sphere CExplosion::GetSphere()
{
	return m_Sphere;
}


