/* ========================================
	HEW/UniBoooom!!
	---------------------------------------
	スフィア用ヘッダ
	---------------------------------------
	SphereInfo.h
	---------------------------------------
	作成者	yamashita
	
	変更履歴
	・2023/11/04 CSphereInfoクラス作成 yamashita
	・2023/11/04 Sphere構造体を作成 yamashita
	・2023/11/04 距離を返す関数を作成 yamashita
	・2023/11/04 角度を返す関数を作成を作成 yamashita
	・2023/11/07 コンストラクタとデストラクタの説明を追加 yamashita
	・2023/11/14 継承・当たり判定のズレ追加・class→struct takagi
	・2024/01/21 コメント改修 takagi

=========================================== */

#ifndef __SPHERE_INFO_H__	//SphereInfo.hインクルードガード
#define __SPHERE_INFO_H__

// =============== インクルード ===================
//#include "TriType.h"
//#include "Transform3d.h"	//ワールド座標系情報
#include "Pos3d.h"	//ワールド座標位置

// =============== 構造体定義 =====================
struct tagSphereInfo
{
public:
	// ===メンバ変数宣言=====
	float fRadius;			//球の半径
	TPos3d<float> fShift;	//当たり判定位置のズレ

	// ===メンバ関数宣言=====

	/* ========================================
		コンストラクタ
		----------------------------------------
		内容：生成時に処理
		----------------------------------------
		引数1：なし
		----------------------------------------
		戻値：なし
	======================================== */
	tagSphereInfo() {}	//コンストラクタ
	tagSphereInfo(const float &Radius, const TPos3d<float> &Shift);	//コンストラクタ

	/* ========================================
		デストラクタ
		----------------------------------------
		内容：消滅時に処理
		----------------------------------------
		引数1：なし
		----------------------------------------
		戻値：なし
	======================================== */
	~tagSphereInfo() {}	//デストラクタ
	TPos3d<float> GetCollisionPos(TPos3d<float> fPos) ;	//当たり判定位置取得
};

#endif // !__SPHERE_INFO_H__
