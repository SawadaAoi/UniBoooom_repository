/* ========================================
	HEW/UniBoooom!!
	------------------------------------
	SceneGame内当たり判定用cpp
	------------------------------------
	SceneGameCollision.cpp
	------------------------------------
	作成者 仁枝潤哉

	変更履歴
	・2023/11/07 新規作成 仁枝潤哉

========================================== */

// =============== インクルード ===================
#include "SceneGame.h"

// =============== 定数定義 =======================

// =============== プロトタイプ宣言 ===============

// =============== グローバル変数定義 =============


/* ========================================
   関数：SceneGameCollision関数
   ----------------------------------------
   内容：SceneGame当たり判定をまとめる関数
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：なし
   ======================================== */
void SceneGame::SceneGameCollision()
{
	PlayerSlimeCollision();
	HammerSlimeCollision();
	SlimeSlimeCollision();
	ExplosionSlimeCollision();
}

/* ========================================
   関数：PlayerSlimeCollision関数
   ----------------------------------------
   内容：プレイヤーとスライムが衝突した際に行う処理
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：なし
   ======================================== */
void SceneGame::PlayerSlimeCollision()
{

}

/* ========================================
   関数：HammerSlimeCollision関数
   ----------------------------------------
   内容：ハンマーとスライムが衝突した際に行う処理
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：なし
   ======================================== */
void SceneGame::HammerSlimeCollision()
{
	// スライムの数分処理する
	for (int i = 0; i < MAX_SLIME;i++)
	{
		CSlimeBase* slime = &m_pSlimeMng->GetSlime()[i];
		if (slime->GetHitMoveFlg())  continue;

		// スライムとハンマーが当たっている場合
		//if (m_pCollision->CheckCollisionSphere(m_pPlayer->GetHammer()->, スライム[添え字].スフィア))
		//{
		//	float HitMoveAngle = プレイヤー.スフィア.Angle(スライム[添え字].スフィア)
		//		スライム[添え字].HitMoveStart(移動スピード、スライム吹飛角度)
		//}
	}
}

/* ========================================
   関数：SlimeSlimeCollision関数
   ----------------------------------------
   内容：スライムとスライムが衝突した際に行う処理
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：なし
   ======================================== */
void SceneGame::SlimeSlimeCollision()
{

}

/* ========================================
   関数：ExplosionSlimeCollision関数
   ----------------------------------------
   内容：爆発とスライムが衝突した際に行う処理
   ----------------------------------------
   引数：なし
   ----------------------------------------
   戻値：なし
   ======================================== */
void SceneGame::ExplosionSlimeCollision()
{

}