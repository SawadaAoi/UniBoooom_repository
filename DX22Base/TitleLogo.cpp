/* ========================================
	HEW/UniBoooom!!
	---------------------------------------
	タイトルロゴ実装
	---------------------------------------
	TitleLogo.cpp

	作成者	takagi

	変更履歴
	・2023/12/16 制作 takagi
	・2023/12/17 引数参照化 takagi
	・2023/12/18 素材変更に伴うサイズ調整 takagi
	・2024/02/02 リファクタリング takagi
	・2024/02/05 リファクタリング takagi

========================================== */

// =============== インクルード ===================
#include "TitleLogo.h"			//自身のヘッダ
#include "Defines.h"			//画面情報用
#include "TitleInitCounter.h"	//カウンタ使用

// =============== 定数定義 ===================
const TPos3d<float> POS_L{ static_cast<float>(SCREEN_WIDTH) / 2.0f,
	static_cast<float>(SCREEN_HEIGHT) / 2.0f, 0.0f };								//大きいときの位置
const TPos3d<float> POS_S{ static_cast<float>(SCREEN_WIDTH) / 2.0f, 502.0f, 0.0f };	//小さいときの位置
const std::array<TTriType<float>, 2> SCALE_RATE{ 0.235f, 0.37f };					//拡縮率(x:最小, y:最大)
const TPos3d<float> SCALE(3594.0f, 2190.0f, 0.0f);									//小さいときの大きさ
const std::string TEXTURE_FILE = "Assets/Texture/Title/TitleLogo.png";				//テクスチャファイル名

/* ========================================
	コンストラクタ
	----------------------------------------
	内容：生成時に行う処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
CTitleLogo::CTitleLogo()
{
	// =============== 初期化 ===================
	SetPos(POS_L);						//位置初期化
	SetScaleRate(SCALE_RATE);			//拡縮率初期化
	SetSize(SCALE);						//大きさ初期化
	SetTexture(TEXTURE_FILE.c_str());	//テクスチャ登録
}

/* ========================================
	デストラクタ
	----------------------------------------
	内容：破棄時に行う処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
CTitleLogo::~CTitleLogo()
{
}

/* ========================================
	更新関数
	----------------------------------------
	内容：更新処理
	----------------------------------------
	引数1：なし
	----------------------------------------
	戻値：なし
=========================================== */
void CTitleLogo::Update()
{
	// =============== 変数宣言 ===================
	auto pCounter = CTitleInitCounter::GetThis().GetCounter().lock();

	// =============== 更新 ===================
	if (pCounter)	//ヌルチェック
	{
		SetPos((POS_L - POS_S) * pCounter->GetRate() + POS_S);		//カウンタ進行を利用した位置更新
	}
	CTitleInitZoomOut::Update();	//親の関数使用
}